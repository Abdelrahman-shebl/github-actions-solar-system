---
  name: Solar System Workflow
  on:
    workflow_dispatch: null
    push:
      branches:
        - main
        - feature/*
  env:
    MONGO_URI: mongodb+srv://supercluster.d83jj.mongodb.net/superData
    MONGO_USERNAME: superuser
    MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
  jobs:
    unit-testing:
      name: Unit Testing
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v4
          with:
            node-version: 20

        - name: Cache NPM dependencies
          uses: actions/cache@v4
          with:
            path: ~/.npm
            key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

        - name: Install Dependencies
          run: npm install

        - name: Unit Testing
          run: npm test

        - name: Archive Test Result
          uses: actions/upload-artifact@v4
          if: always()
          with:
            name: Mocha-Test-Result
            path: test-results.xml

    code-coverage:
      runs-on: ubuntu-latest
      container:
        image: 'node:20'
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        # - name: Setup NodeJS Version
        #   uses: actions/setup-node@v4
        #   with:
        #     node-version: 18

        - name: Install NodeJS dependencies
          run: npm install

        - name: Unit Testing
          run: npm run coverage
          continue-on-error: true 

        - name: Archive Test Result
          uses: actions/upload-artifact@v4
          with:
            name: Code-Coverage-Result
            path: coverage
            retention-days: 5

      
    docker: 
      runs-on: ubuntu-latest
      permissions: 
        packages: write
      needs: [code-coverage, unit-testing]
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Login to GitHub Container Registry
          uses: docker/login-action@v3
          with:
              registry: ghcr.io
              username: ${{ github.actor }}
              password: ${{ secrets.GITHUB_TOKEN }} 

        - name: Build and push
          uses: docker/build-push-action@v6
          with:
            context: .
            push: true
            tags: ghcr.io/${{ github.actor }}/solar-system:${{ github.sha }}
                
    dev-deploy: 
      runs-on: ubuntu-latest
      needs: [docker]
      environment:
        name: development
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
        
        - uses: azure/setup-kubectl@v4
          with:
            version: 'v1.28.1'

        - uses: azure/k8s-set-context@v4
          with:
            method: kubeconfig
            kubeconfig: ${{secrets.KUBECONFIG }}
            context: <context name> # current-context from kubeconfig is used as default

        - name: testing installation
          run: kubectl version -o yaml
        
        